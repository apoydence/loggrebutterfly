// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package networkreader_test

import (
	"github.com/apoydence/loggrebutterfly/api/intra"
	"golang.org/x/net/context"
)

type mockDataNodeServer struct {
	ReadMetricsCalled chan bool
	ReadMetricsInput  struct {
		Arg0 chan context.Context
		Arg1 chan *intra.ReadMetricsInfo
	}
	ReadMetricsOutput struct {
		Ret0 chan *intra.ReadMetricsResponse
		Ret1 chan error
	}
}

func newMockDataNodeServer() *mockDataNodeServer {
	m := &mockDataNodeServer{}
	m.ReadMetricsCalled = make(chan bool, 100)
	m.ReadMetricsInput.Arg0 = make(chan context.Context, 100)
	m.ReadMetricsInput.Arg1 = make(chan *intra.ReadMetricsInfo, 100)
	m.ReadMetricsOutput.Ret0 = make(chan *intra.ReadMetricsResponse, 100)
	m.ReadMetricsOutput.Ret1 = make(chan error, 100)
	return m
}
func (m *mockDataNodeServer) ReadMetrics(arg0 context.Context, arg1 *intra.ReadMetricsInfo) (*intra.ReadMetricsResponse, error) {
	m.ReadMetricsCalled <- true
	m.ReadMetricsInput.Arg0 <- arg0
	m.ReadMetricsInput.Arg1 <- arg1
	return <-m.ReadMetricsOutput.Ret0, <-m.ReadMetricsOutput.Ret1
}
