// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package server_test

import "golang.org/x/net/context"

type mockCalculator struct {
	CalculateCalled chan bool
	CalculateInput  struct {
		Route, AlgName chan string
		Ctx            chan context.Context
		Meta           chan []byte
	}
	CalculateOutput struct {
		FinalResult chan map[string][]byte
		Err         chan error
	}
}

func newMockCalculator() *mockCalculator {
	m := &mockCalculator{}
	m.CalculateCalled = make(chan bool, 100)
	m.CalculateInput.Route = make(chan string, 100)
	m.CalculateInput.AlgName = make(chan string, 100)
	m.CalculateInput.Ctx = make(chan context.Context, 100)
	m.CalculateInput.Meta = make(chan []byte, 100)
	m.CalculateOutput.FinalResult = make(chan map[string][]byte, 100)
	m.CalculateOutput.Err = make(chan error, 100)
	return m
}
func (m *mockCalculator) Calculate(route, algName string, ctx context.Context, meta []byte) (finalResult map[string][]byte, err error) {
	m.CalculateCalled <- true
	m.CalculateInput.Route <- route
	m.CalculateInput.AlgName <- algName
	m.CalculateInput.Ctx <- ctx
	m.CalculateInput.Meta <- meta
	return <-m.CalculateOutput.FinalResult, <-m.CalculateOutput.Err
}
