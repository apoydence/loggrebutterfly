// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package network_test

import (
	"github.com/poy/loggrebutterfly/api/intra"
	"golang.org/x/net/context"
)

type mockAnalystServer struct {
	ExecuteCalled chan bool
	ExecuteInput  struct {
		Arg0 chan context.Context
		Arg1 chan *intra.ExecuteInfo
	}
	ExecuteOutput struct {
		Ret0 chan *intra.ExecuteResponse
		Ret1 chan error
	}
}

func newMockAnalystServer() *mockAnalystServer {
	m := &mockAnalystServer{}
	m.ExecuteCalled = make(chan bool, 100)
	m.ExecuteInput.Arg0 = make(chan context.Context, 100)
	m.ExecuteInput.Arg1 = make(chan *intra.ExecuteInfo, 100)
	m.ExecuteOutput.Ret0 = make(chan *intra.ExecuteResponse, 100)
	m.ExecuteOutput.Ret1 = make(chan error, 100)
	return m
}
func (m *mockAnalystServer) Execute(arg0 context.Context, arg1 *intra.ExecuteInfo) (*intra.ExecuteResponse, error) {
	m.ExecuteCalled <- true
	m.ExecuteInput.Arg0 <- arg0
	m.ExecuteInput.Arg1 <- arg1
	return <-m.ExecuteOutput.Ret0, <-m.ExecuteOutput.Ret1
}
