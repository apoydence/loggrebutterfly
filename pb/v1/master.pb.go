// Code generated by protoc-gen-go.
// source: master.proto
// DO NOT EDIT!

package loggrebutterfly

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RoutesInfo struct {
}

func (m *RoutesInfo) Reset()                    { *m = RoutesInfo{} }
func (m *RoutesInfo) String() string            { return proto.CompactTextString(m) }
func (*RoutesInfo) ProtoMessage()               {}
func (*RoutesInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type RoutesResponse struct {
	Routes []*RouteInfo `protobuf:"bytes,1,rep,name=routes" json:"routes,omitempty"`
}

func (m *RoutesResponse) Reset()                    { *m = RoutesResponse{} }
func (m *RoutesResponse) String() string            { return proto.CompactTextString(m) }
func (*RoutesResponse) ProtoMessage()               {}
func (*RoutesResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *RoutesResponse) GetRoutes() []*RouteInfo {
	if m != nil {
		return m.Routes
	}
	return nil
}

type RouteInfo struct {
	Name   string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Leader string `protobuf:"bytes,2,opt,name=leader" json:"leader,omitempty"`
}

func (m *RouteInfo) Reset()                    { *m = RouteInfo{} }
func (m *RouteInfo) String() string            { return proto.CompactTextString(m) }
func (*RouteInfo) ProtoMessage()               {}
func (*RouteInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *RouteInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RouteInfo) GetLeader() string {
	if m != nil {
		return m.Leader
	}
	return ""
}

func init() {
	proto.RegisterType((*RoutesInfo)(nil), "loggrebutterfly.RoutesInfo")
	proto.RegisterType((*RoutesResponse)(nil), "loggrebutterfly.RoutesResponse")
	proto.RegisterType((*RouteInfo)(nil), "loggrebutterfly.RouteInfo")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Master service

type MasterClient interface {
	Routes(ctx context.Context, in *RoutesInfo, opts ...grpc.CallOption) (*RoutesResponse, error)
}

type masterClient struct {
	cc *grpc.ClientConn
}

func NewMasterClient(cc *grpc.ClientConn) MasterClient {
	return &masterClient{cc}
}

func (c *masterClient) Routes(ctx context.Context, in *RoutesInfo, opts ...grpc.CallOption) (*RoutesResponse, error) {
	out := new(RoutesResponse)
	err := grpc.Invoke(ctx, "/loggrebutterfly.Master/Routes", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Master service

type MasterServer interface {
	Routes(context.Context, *RoutesInfo) (*RoutesResponse, error)
}

func RegisterMasterServer(s *grpc.Server, srv MasterServer) {
	s.RegisterService(&_Master_serviceDesc, srv)
}

func _Master_Routes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RoutesInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MasterServer).Routes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/loggrebutterfly.Master/Routes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MasterServer).Routes(ctx, req.(*RoutesInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Master_serviceDesc = grpc.ServiceDesc{
	ServiceName: "loggrebutterfly.Master",
	HandlerType: (*MasterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Routes",
			Handler:    _Master_Routes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "master.proto",
}

func init() { proto.RegisterFile("master.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0xc9, 0x4d, 0x2c, 0x2e,
	0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xcf, 0xc9, 0x4f, 0x4f, 0x2f, 0x4a,
	0x4d, 0x2a, 0x2d, 0x29, 0x49, 0x2d, 0x4a, 0xcb, 0xa9, 0x54, 0xe2, 0xe1, 0xe2, 0x0a, 0xca, 0x2f,
	0x2d, 0x49, 0x2d, 0xf6, 0xcc, 0x4b, 0xcb, 0x57, 0x72, 0xe1, 0xe2, 0x83, 0xf0, 0x82, 0x52, 0x8b,
	0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0x8c, 0xb8, 0xd8, 0x8a, 0xc0, 0x22, 0x12, 0x8c, 0x0a, 0xcc,
	0x1a, 0xdc, 0x46, 0x52, 0x7a, 0x68, 0x26, 0xe8, 0x81, 0x35, 0x80, 0x74, 0x07, 0x41, 0x55, 0x2a,
	0x99, 0x73, 0x71, 0xc2, 0x05, 0x85, 0x84, 0xb8, 0x58, 0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0x21, 0x31, 0x2e, 0xb6, 0x9c, 0xd4, 0xc4, 0x94, 0xd4, 0x22,
	0x09, 0x26, 0xb0, 0x28, 0x94, 0x67, 0x14, 0xc4, 0xc5, 0xe6, 0x0b, 0x76, 0xad, 0x90, 0x07, 0x17,
	0x1b, 0xc4, 0x21, 0x42, 0xd2, 0xd8, 0x2d, 0x04, 0xbb, 0x57, 0x4a, 0x1e, 0x87, 0x24, 0xcc, 0xf9,
	0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x8f, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x31, 0xd3,
	0xcc, 0x08, 0x01, 0x00, 0x00,
}
