// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package server_test

type mockWriter struct {
	WriteCalled chan bool
	WriteInput  struct {
		Data chan []byte
	}
	WriteOutput struct {
		Err chan error
	}
}

func newMockWriter() *mockWriter {
	m := &mockWriter{}
	m.WriteCalled = make(chan bool, 100)
	m.WriteInput.Data = make(chan []byte, 100)
	m.WriteOutput.Err = make(chan error, 100)
	return m
}
func (m *mockWriter) Write(data []byte) (err error) {
	m.WriteCalled <- true
	m.WriteInput.Data <- data
	return <-m.WriteOutput.Err
}

type mockReadFetcher struct {
	ReaderCalled chan bool
	ReaderInput  struct {
		Name chan string
	}
	ReaderOutput struct {
		Reader chan func() ([]byte, error)
		Err    chan error
	}
}

func newMockReadFetcher() *mockReadFetcher {
	m := &mockReadFetcher{}
	m.ReaderCalled = make(chan bool, 100)
	m.ReaderInput.Name = make(chan string, 100)
	m.ReaderOutput.Reader = make(chan func() ([]byte, error), 100)
	m.ReaderOutput.Err = make(chan error, 100)
	return m
}
func (m *mockReadFetcher) Reader(name string) (reader func() ([]byte, error), err error) {
	m.ReaderCalled <- true
	m.ReaderInput.Name <- name
	return <-m.ReaderOutput.Reader, <-m.ReaderOutput.Err
}
